{{- if .Release.IsInstall }}
If this is a fresh install, you should now generate the long-term endpoint key pair and the initial session key by running the following commands, which will have the private keys stored in Vault and the certificates output:

  QUEUE_POD_NAME="$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name=relaynet-pong,app.kubernetes.io/instance={{ .Release.Name }},pong.relaycorp.tech/component=queue" -o jsonpath="{.items[0].metadata.name}" | head -1)"

  kubectl exec "${QUEUE_POD_NAME}" -- node build/main/bin/generate-keypairs.js
{{- end }}

Get the PoHTTP endpoint URL by running these commands:

{{- if .Values.ingress.enabled }}
  (You're using an ingress, so please check you cloud provider account)
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "..fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "..fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "..fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  ENDPOINT_SERVICE_NAME=$(kubectl get svc --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "..name" . }},app.kubernetes.io/instance={{ .Release.Name }},pong.relaycorp.tech/component=pohttp" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward "svc/$ENDPOINT_SERVICE_NAME" 8080:{{ .Values.service.port }}
{{- end }}
